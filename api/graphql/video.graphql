type VideoConnection implements Connection @access(type: LOGIN_STRATEGY) {
    pageInfo: PageInfo!
    totalCount: Int!
    edges: [VideoEdge!]!
    nodes: [Video!]!
}

type VideoEdge implements Edge @access(type: LOGIN_STRATEGY) {
    cursor: Cursor!
    node: Video!
}

type Video implements Node, TimeDetail @access(type: LOGIN_STRATEGY) {
    id: ID!
    created: DateTime!
    lastUpdated: DateTime!
    published: DateTime!
    uri: UriString!
    name: String!
    description: String
    about: String
    images: VideoImageInfo!
    category: String
    tags: [String!]!
    viewCount: Int
    isLive: Boolean!
    lengthInMilliseconds: Int!
    streamType: VideoStreamType!
    standaloneSubtitles: [Subtitle!]!
    drmInfo: DrmInfo
    locale: String
    actions: [VideoAction!]!
    adInfo: AdInfo
    related(take: Int!, after: Cursor): VideoResultItemConnection!
}

type VideoImageInfo @access(type: OPEN) {
    preview: UriString
}

enum VideoStreamType @access(type: LOGIN_STRATEGY) {
    PROGRESSIVE
    DASH
    SMOOTH_STREAMING
    HLS
}

interface VideoAction {
    type: String!
}

interface SelectableAction {
    isSelected: Boolean!
}

type DownloadAction implements VideoAction @access(type: LOGIN_STRATEGY) {
    type: String!
    downloadUri: UriString!
}

type RatingUpAction implements VideoAction, SelectableAction @access(type: LOGIN_STRATEGY) {
    type: String!
    isSelected: Boolean!
}

type RatingDownAction implements VideoAction, SelectableAction @access(type: LOGIN_STRATEGY) {
    type: String!
    isSelected: Boolean!
}

type FlagAction implements VideoAction, SelectableAction @access(type: LOGIN_STRATEGY) {
    type: String!
    isSelected: Boolean!
}

enum SelectableVideoActionType @access(type: LOGIN_STRATEGY) {
    RATING_UP
    RATING_DOWN
    FLAG
}

type Subtitle @access(type: LOGIN_STRATEGY) {
    locale: String!
    uri: UriString!
    format: SubtitleFormat!
}

enum SubtitleFormat @access(type: LOGIN_STRATEGY) {
    WEB_VTT
    TTML
    SUB_RIP
    SUB_STATION_ALPHA
}

enum DrmScheme @access(type: LOGIN_STRATEGY) {
    CENC
    CBCS
    CBC1
    CENS
    CLEAR_KEY
    PLAYREADY_SL2000
}

type DrmInfo @access(type: LOGIN_STRATEGY) {
    licenseServerUrl: UriString!
    scheme: DrmScheme!
    multiSession: Boolean!
    offlineLicenseKeySetId: String
}

type AdInfo @access(type: LOGIN_STRATEGY) {
    format: AdFormat!
    uri: UriString!
}

enum AdFormat @access(type: LOGIN_STRATEGY) {
    VAST
    VMAP
}

type VideoResultItem @access(type: LOGIN_STRATEGY) {
    video: Video!
    channel: Channel!
}

type VideoResultItemEdge @access(type: LOGIN_STRATEGY) {
    cursor: String!
    node: VideoResultItem!
}

type VideoResultItemConnection @access(type: LOGIN_STRATEGY) {
    pageInfo: PageInfo!
    totalCount: Int!
    edges: [VideoResultItemEdge!]!
    nodes: [VideoResultItem!]!
}