import com.chrynan.video.buildSrc.AppConstants

// Top-level build file where you can add configuration options common to all sub-projects/modules.

group AppConstants.appGroup
version AppConstants.appVersion

buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
        classpath "digital.wup:android-maven-publish:3.6.2"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.4"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.10.1"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.3.72"
        classpath "com.apollographql.apollo:apollo-gradle-plugin:2.2.3"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()
        maven {
            url = AppConstants.bintrayUri
        }
        maven { url "https://jitpack.io" }
    }

    // Allows use of Experimental Kotlin features, such as, Kotlin Contracts
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            freeCompilerArgs = ["-Xuse-experimental=kotlin.Experimental", "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }
}

subprojects {
    apply plugin: "maven-publish"
    apply plugin: "com.jfrog.bintray"
    apply plugin: "org.jetbrains.dokka"

    dokka {
        outputFormat = "gfm"
        outputDirectory = "../docs"

        configuration {
            includeNonPublic = false
            skipEmptyPackages = true
            skipDeprecated = true
            reportUndocumented = true
            jdkVersion = 8
            targets = ["JVM", "COMMON"]
        }
    }

    bintray {
        user = project.findProperty("BINTRAY_USER") ?: System.getenv("BINTRAY_USER")
        key = project.findProperty("BINTRAY_KEY") ?: System.getenv("BINTRAY_KEY")
        pkg {
            repo = AppConstants.bintrayRepo
            name = AppConstants.appRepo
            licenses = [AppConstants.appLicenseType]
            vcsUrl = AppConstants.repoUri
            version {
                name = AppConstants.appVersion
                desc = AppConstants.appVersionDescription
                released = new Date()
                vcsTag = AppConstants.appVersion
            }
        }
    }

    bintrayUpload.doFirst {
        publications = publishing.publications.collect {
            it.name
        }
    }

    bintrayUpload.dependsOn publishToMavenLocal
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
