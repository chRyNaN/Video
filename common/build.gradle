apply plugin: "kotlin-multiplatform"
apply plugin: "kotlinx-serialization"
apply plugin: "com.apollographql.apollo"

group rootProject.libraryGroup
version rootProject.libraryVersion

kotlin {
    targets {
        jvm()
    }
    sourceSets {
        commonMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-common"

                api "org.jetbrains.kotlinx:kotlinx-coroutines-core-common:1.3.7"

                // HTTP
                api "io.ktor:ktor-client-core:1.3.2"
                api "io.ktor:ktor-client-serialization:1.3.2"
                api "io.ktor:ktor-client-logging:1.3.2"

                // GraphQL Client - Apollo
                api "com.apollographql.apollo:apollo-api:2.2.1"
                implementation "com.apollographql.apollo:apollo-runtime-kotlin:2.2.1"

                // Serialization
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime-common:0.20.0"

                // Logging
                api "com.chrynan.logger:logger-core:1.2.1"
            }
        }
        jvmMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib"

                implementation "javax.inject:javax.inject:1"

                api "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7"

                // HTTP
                api "io.ktor:ktor-client-okhttp:1.3.2"
                api "io.ktor:ktor-client-serialization-jvm:1.3.2"
                api "io.ktor:ktor-client-logging-jvm:1.3.2"

                // GraphQL Client - Apollo
                api "com.apollographql.apollo:apollo-api:2.2.1"

                // Serialization
                api "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"

                // Logging
                api "com.chrynan.logger:logger-core-jvm:1.2.1"
            }
        }
    }
}

apollo {
    generateKotlinModels = true
    customTypeMapping = [
            "Moment"   : "kotlin.String",
            "UriString": "kotlin.String",
            "Cursor"   : "kotlin.String"
    ]
}

configurations {
    compileClasspath
}

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = "video-common"
        }
        jvm {
            artifactId = "video-common-jvm"
        }
        metadata {
            artifactId = "video-common-metadata"
        }
    }
}
