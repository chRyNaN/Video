import com.chrynan.video.buildSrc.AppConstants
import com.chrynan.video.buildSrc.plugins.schema.CreateSchemaJsonPlugin
import com.chrynan.video.buildSrc.Deps

apply plugin: "kotlin-multiplatform"
apply plugin: "kotlinx-serialization"
apply plugin: "com.apollographql.apollo"
apply plugin: CreateSchemaJsonPlugin

group AppConstants.appGroup
version AppConstants.appVersion

kotlin {
    targets {
        jvm()
    }
    sourceSets {
        all {
            languageSettings {
                useExperimentalAnnotation("kotlin.RequiresOptIn")
            }
        }
        commonMain {
            dependencies {
                implementation Deps.KOTLIN_COMMON

                implementation Deps.KOTLIN_COROUTINES_COMMON

                api Deps.CHRYNAN_INJECT_COMMON

                // Validation
                api Deps.CHRYNAN_VALIDATOR_CORE_COMMON
                api Deps.CHRYNAN_VALIDATOR_WEB_COMMON

                // HTTP
                api Deps.KTOR_CORE_COMMON
                api Deps.KTOR_SERIALIZATION
                api Deps.KTOR_LOGGING

                // GraphQL Client - Apollo
                api Deps.APOLLO_API_COMMON
                implementation Deps.APOLLO_RUNTIME_COMMON
                implementation Deps.APOLLO_CACHE_SQLITE_COMMON

                // Serialization
                api Deps.KOTLIN_SERIALIZATION_COMMON

                // Logging
                api Deps.CHRYNAN_LOGGING_CORE
            }
        }
        jvmMain {
            dependencies {
                implementation Deps.KOTLIN_JVM

                api Deps.CHRYNAN_INJECT_JVM
                implementation Deps.JAVAX_INJECT

                // Validation
                api Deps.CHRYNAN_VALIDATOR_CORE_JVM
                api Deps.CHRYNAN_VALIDATOR_WEB_JVM

                implementation Deps.KOTLIN_COROUTINES_JVM

                // HTTP
                api Deps.KTOR_OKHTTP
                api Deps.KTOR_SERIALIZATION_JVM
                api Deps.KTOR_LOGGING_JVM

                // GraphQL Client - Apollo
                api Deps.APOLLO_API_JVM

                // Serialization
                api Deps.KOTLIN_SERIALIZATION_JVM

                // Logging
                api Deps.CHRYNAN_LOGGING_CORE_JVM
            }
        }
    }
}

graphQLSchemaJson {
    graphQLDirectory = "${project.rootDir.path}/api/graphql/"
    schemaOutputDirectory = "${project.projectDir.path}/src/commonMain/graphql/"
}

apollo {
    generateKotlinModels = true
    customTypeMapping = [
            "Moment"   : "kotlin.String",
            "UriString": "kotlin.String",
            "Cursor"   : "kotlin.String"
    ]
}

project.tasks.whenTaskAdded { task ->
    if (task.name == "generateApolloSources" || task.name == "generateCommonMainApolloSources") {
        task.dependsOn(createSchemaJson)
    }
}

configurations {
    compileClasspath
}

publishing {
    publications {
        kotlinMultiplatform {
            artifactId = "video-common"
        }
        jvm {
            artifactId = "video-common-jvm"
        }
        metadata {
            artifactId = "video-common-metadata"
        }
    }
}
